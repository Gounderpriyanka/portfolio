<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Gounder Priyanka | Cloud & Web Developer Portfolio</title>

<!-- Font Awesome and Devicon -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css">

<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600;800&display=swap" rel="stylesheet" />

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600;800&display=swap" rel="stylesheet" />
<style>
/* ===== RESET ===== */
*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }
html, body {
  font-family: 'Poppins', sans-serif;
  scroll-behavior: smooth;
  transition: background 0.6s ease, color 0.6s ease;
  
}

/* ===== THEMES ===== */
:root {
  --bg: #ffffff;
  --text: #374151;
  --accent: #2563eb;
  --card-bg: #f9fafb;
  --shadow: rgba(0,0,0,0.1);
  --hero-gradient: linear-gradient(135deg, #4a90e2, #7ad6ff);
}
body.dark {
  --bg: #0f172a;
  --text: #e2e8f0;
  --accent: #60a5fa;
  --card-bg: #1e293b;
  --shadow: rgba(255,255,255,0.1);
  --hero-gradient: linear-gradient(135deg, #1e3a8a, #0f172a);
}
body {
  background: var(--bg);
  color: var(--text);
  
}

/* ===== ANIMATED BACKGROUND ===== */
.background {
  position: fixed;
  top: 0; left: 0;
  width: 100%; height: 100%;
  overflow: hidden;
  z-index: -1;
  background: linear-gradient(180deg, #7ad6ff 0%, #e0f2fe 100%);
  animation: gradientShift 20s ease infinite alternate;
}
body.dark .background {
  background: radial-gradient(circle at top, #0f172a 0%, #1e3a8a 100%);
}
@keyframes gradientShift {
  0% { filter: hue-rotate(0deg); }
  100% { filter: hue-rotate(60deg); }
}
.cloud, .bubble {
  position: absolute;
  opacity: 0.5;
  pointer-events: none;
  animation: float 60s linear infinite;
}
.cloud {
  background: url('https://png.pngtree.com/png-vector/20240327/ourmid/pngtree-cloud-computing-technology-concept-png-image_12229091.png') no-repeat center/contain;
  width: 200px; height: 120px;
    animation-duration: 4s;
}
.bubble {
  border-radius: 50%;
  background: radial-gradient(circle at 30% 30%, rgba(255,255,255,0.8), rgba(255,255,255,0));
   animation-duration: 3s;  
}
@keyframes float {
  0% { transform: translateY(100vh) translateX(0); opacity: 0; }
  10% { opacity: 0.5; }
  90% { opacity: 0.5; }
  100% { transform: translateY(-20vh) translateX(50vw); opacity: 0; }
}

/* ===== HEADER ===== */
header {
  position: sticky;
  top: 0;
  z-index: 1000;
  background: rgba(255,255,255,0.9);
  backdrop-filter: blur(10px);
  display: flex; justify-content: space-between; align-items: center;
  padding: 1rem 2rem;
  box-shadow: 0 2px 8px var(--shadow);
}
body.dark header { background: rgba(15,23,42,0.9); }
.logo { font-weight: 800; font-size: 1.7rem; color: var(--accent); }
nav ul { list-style: none; display: flex; gap: 1.5rem; }
nav a { color: var(--text); text-decoration: none; font-weight: 600; transition: color 0.3s ease; }
nav a:hover { color: var(--accent); }

/* Theme Toggle */
.theme-toggle {
  background: none; border: none; font-size: 1.5rem;
  color: var(--accent); cursor: pointer;
  transition: transform 0.3s ease;
}
.theme-toggle:hover { transform: rotate(20deg); }

/* ===== HERO ===== */
.hero {
  position: relative;
  background: var(--hero-gradient);
  color: #fff;
  text-align: center;
  padding: 6rem 2rem;
  border-radius: 0 0 3rem 3rem;
  box-shadow: 0 15px 35px rgba(37,99,235,0.3);
}
.hero h1 {
  font-size: 3rem;
  font-weight: 800;
  margin-bottom: 1rem;
  min-height: 3.5rem;
}
.typing {
  border-right: 3px solid #facc15;
  white-space: nowrap;
  overflow: hidden;
  display: inline-block;
  animation: typing 3s steps(10, end) infinite alternate, blink 0.7s infinite;
}
@keyframes typing { from { width: 0; } to { width: 100%; } }
@keyframes blink { 50% { border-color: transparent; } }

.hero p { font-size: 1.3rem; margin: 1.5rem 0; }
.hero .btn-primary {
  background: #facc15;
  color: #1e3a8a;
  font-weight: 700;
  padding: 1rem 2.5rem;
  border: none;
  border-radius: 2rem;
  cursor: pointer;
  transition: transform 0.3s, box-shadow 0.3s;
}
.hero .btn-primary:hover { transform: scale(1.05); box-shadow: 0 8px 20px rgba(250,204,21,0.4); }

/* Social Links */
.social-links {
  margin-top: 2rem;
  display: flex;
  justify-content: center;
  gap: 1.5rem;
}
.social-links a {
  color: white;
  font-size: 1.8rem;
  transition: transform 0.3s ease, color 0.3s ease;
}
.social-links a:hover { transform: translateY(-4px); color: #facc15; }
.social-links a[href*="linkedin"] { color: #0077b5; }
.social-links a[href*="github"] { color: #000000; }
.social-links a[href*="instagram"] { color: #e1306c; }

/* ===== SECTIONS ===== */
section { 
scroll-snap-align: start; 

padding: 4rem 2rem; text-align: center; }
h2 { font-size: 2.6rem; color: var(--accent); margin-bottom: 2rem; }

/* ===== ABOUT ===== */
#about {
  background: var(--card-bg);
  border-radius: 1rem;
  box-shadow: 0 10px 25px var(--shadow);
  max-width: 800px;
  margin: 3rem auto;
  padding: 2rem;
}

/* ===== EXPERIENCE ===== */
#experience {
  background: var(--card-bg);
  border-radius: 1rem;
  box-shadow: 0 10px 25px var(--shadow);
  max-width: 800px;
  margin: 3rem auto;
  padding: 2rem;
  text-align: left;
}
#experience h2 { text-align: center; }
.exp-item h3 { color: var(--accent); font-size: 1.3rem; }
.exp-item ul { margin-left: 1.5rem; line-height: 1.6; }

/* ===== EDUCATION ===== */
#education {
  background: var(--card-bg);
  border-radius: 1rem;
  box-shadow: 0 10px 25px var(--shadow);
  max-width: 800px;
  margin: 3rem auto;
  padding: 2rem;
}
.edu-card { background: var(--bg); padding: 2rem; border-radius: 1rem; box-shadow: 0 8px 24px var(--shadow); }
.edu-card h3 { color: var(--accent); margin-bottom: 0.5rem; }

/* ===== SKILLS ===== */
#skills .skills-list {
  display: flex; flex-wrap: wrap;
  justify-content: center; gap: 1rem;
}
.skill-item {
  background: #e0e7ff;
  color: #1e3a8a;
  padding: 0.6rem 1.2rem;
  border-radius: 2rem;
  font-weight: 600;
  box-shadow: 0 4px 10px rgba(99,102,241,0.3);
}

.skill-item:hover { transform: scale(1.08); }
.skill-icon { width: 22px; height: 22px; }


body.dark .skill-item { background: #1e293b; color: #e0e7ff; }

/* ===== CERTIFICATES ===== */
.certificates-gallery {
  display: grid; grid-template-columns: repeat(auto-fit,minmax(240px,1fr));
  gap: 2rem; max-width: 900px; margin: auto;
}
.certificate-frame { background: var(--card-bg); border-radius: 1rem; box-shadow: 0 8px 24px var(--shadow); overflow: hidden; }
.certificate-frame img { width: 100%; display: block; aspect-ratio: 4/3; object-fit: cover; }
.title-overlay { background: var(--accent); color: white; font-weight: 700; font-size: 1.1rem; padding: 1rem; }

/* ===== PROJECTS ===== */
.projects-list {
  display: flex; flex-direction: column; gap: 2rem;
  max-width: 900px; margin: auto;
}
.project-card { background: var(--card-bg); border-radius: 1rem; box-shadow: 0 8px 30px var(--shadow); padding: 2rem; transition: transform 0.3s ease; }
.project-card:hover { transform: translateY(-6px); }
.project-title { color: var(--accent); font-size: 1.5rem; margin-bottom: 0.5rem; }

/* mini canvas styling */
.mini-canvas { width: 100%; height: 220px; display: block; border-radius: 10px; background: linear-gradient(180deg, rgba(0,0,0,0.15), rgba(0,0,0,0.05)); cursor: pointer; }

/* modal styling */
.modal { position: fixed; inset: 0; display: none; align-items:center; justify-content:center; background:rgba(2,6,23,0.7); z-index:1200; }
.modal.open { display:flex; }
.modal .panel { width:95%; max-width:1000px; background: #fff; border-radius:10px; overflow:hidden; }
.modal .panel.dark { background: #06132a; color:#dbeafe; }

/* hero canvas overlay */
.hero-canvas { position: absolute; inset: 0 0 auto 0; height: 420px; pointer-events: auto; border-radius: 0 0 3rem 3rem; z-index: 1; }

/* keep hero texts above canvas */
.hero > * { position: relative; z-index: 30; }

/* progress label */
#progressLabel { position: absolute; right: 28px; bottom: 18px; z-index: 40; background: rgba(0,0,0,0.35); color:#fff; padding:6px 10px; border-radius:8px; font-weight:600; }

/* ===== GOOGLE CLOUD ===== */
#google-clouds {
  background: var(--card-bg);
  border-radius: 1rem;
  box-shadow: 0 10px 25px var(--shadow);
  max-width: 900px;
  margin: 3rem auto;
  padding: 2rem;
  text-align: left;
}
.google-cloud-text strong { color: var(--accent); }

/* ===== CONTACT ===== */
#contact {
  max-width: 700px;
  margin: 3rem auto;
  padding: 2.5rem;
  background: #e0f2fe;
  border-radius: 1rem;
  box-shadow: 0 10px 25px rgba(14,165,233,0.3);
  color: #075985;
}
body.dark #contact {
  background: #1e293b;
  color: #e2e8f0;
  box-shadow: 0 10px 25px rgba(59,130,246,0.3);
}
#contact a {
  color: var(--accent);
  font-weight: 600;
  text-decoration: none;
}
#contact a:hover { text-decoration: underline; }

/* ===== FOOTER ===== */
footer {
  background: var(--accent);
  color: white;
  text-align: center;
  padding: 2rem;
  font-weight: 500;
}

@media (max-width:980px){
  .hero-canvas { height: 320px; }
  .mini-canvas { height: 180px; }
}
</style>
</head>
<body>
<header>
  <div class="logo">Gounder Priyanka</div>
  <nav>
    <ul>
      <li><a href="#about">About</a></li>
      <li><a href="#experience">Experience</a></li>
      <li><a href="#education">Education</a></li>
      <li><a href="#skills">Skills</a></li>
      <li><a href="#certificates">Certificates</a></li>
      <li><a href="#projects">Projects</a></li>
      <li><a href="#google-clouds">Google Cloud</a></li>
      <li><a href="#contact">Contact</a></li>
    </ul>
  </nav>
  <button class="theme-toggle" id="themeToggle">🌙</button>
</header>

<!-- Hero -->
<section class="hero">
  <h1><span class="typing">Hi!   I’m Priyanka 👩‍💻</span></h1>
 <p>Aspiring Full-Stack Developer and Google Cloud GenAI Study Jam Graduate </p>
 <p>driving innovation with cloud computing &amp; AI.</p>
  <a href="https://www.cloudskillsboost.google/public_profiles/41405d57-7c7c-44f8-9057-088181c63bae" class="btn-primary" target="_blank">View Google Cloud Profile</a>

  <div class="social-links">
    <a href="https://www.linkedin.com/in/gounder-priyanka-811108290" target="_blank"><i class="fa-brands fa-linkedin"></i></a>
    <a href="https://github.com/Gounderpriyanka" target="_blank"><i class="fa-brands fa-github"></i></a>
    <a href="https://www.instagram.com/infinity.lo0p?igsh=a2ozb3BhbmUwOXIw/" target="_blank"><i class="fa-brands fa-instagram"></i></a>
  </div>

</section>

<!-- About -->
<section id="about">
  <h2>☁️ About Me</h2>
 <p style="font-size: 1.3rem; font-weight: 600; margin-bottom: 1rem;">
     An aspiring Cloud Developer ☁️ and Python enthusiast 🐍 with a passion for mastering Data Structures & Algorithms 📚.
  </p>
  <p style="font-size: 1.15rem; line-height: 1.6; color: #075985; user-select: text;">
    I specialize in building AI-powered applications using Google Cloud’s GenAI tools 🤖 like Gemini and Streamlit. I enjoy turning complex problems into elegant cloud solutions 🚀 and continuously expanding my skills through hands-on projects and certifications.
  </p>
</section>

<!-- Experience -->
<section id="experience">
  <h2>💼 Experience</h2>
  <div class="exp-item">
    <h3>Accounts & Inventory Assistant | Regius Cargo International Company</h3>
    <p>October 2024 – January 2025</p>
    <ul>
     <li>📄 Managed daily accounting tasks including invoicing, billing, and ledger maintenance</li>
      <li>📊 Assisted in financial record keeping and report generation</li>
      <li>🤝 Coordinated with clients and vendors for smooth transaction processing</li>
      <li>💻 Used <strong>Logi-sys software </strong> for accounting and inventory management</li>
  </div>
</section>  

<!-- Education -->
<section id="education">
  <h2>🎓 Education</h2>
  <div class="edu-card">
    <h3>Bachelor of Computer Applications (BCA)</h3>
    <p>Silver Oak University, Ahmedabad | CGPA: 8.91 / 10 | Year: 2026 (Expected)</p>
  </div>
</section>

<!-- Skills -->
<section id="skills">
  <h2>🧠 Skills</h2>
  <div class="skills-list">
    <div class="skill-item"><i class="devicon-html5-plain colored skill-icon"></i> HTML</div>
    <div class="skill-item"><i class="devicon-css3-plain colored skill-icon"></i> CSS</div>
    <div class="skill-item"><i class="devicon-javascript-plain colored skill-icon"></i> JavaScript</div>
    <div class="skill-item"><i class="devicon-react-original colored skill-icon"></i> React</div>
    <div class="skill-item"><i class="devicon-python-plain colored skill-icon"></i> Python</div>
    <div class="skill-item"><i class="devicon-nodejs-plain colored skill-icon"></i> Node.js</div>
    <div class="skill-item"><i class="devicon-mongodb-plain colored skill-icon"></i> MongoDB</div>
    <div class="skill-item"><i class="devicon-github-original colored skill-icon"></i> GitHub</div>
    <div class="skill-item"><i class="devicon-googlecloud-plain colored skill-icon"></i> Google Cloud</div>
    <div class="skill-item"> 🎨 UI/UX Design</div>
    <div class="skill-item">🛠️ Debugging</div>
    <div class="skill-item">💡 Problem Solving</div>
  </div>
</section>

<!-- Certificates -->
<section id="certificates">
  <h2>🏆 Certificates</h2>
  <div class="certificates-gallery">
    <div class="certificate-frame">
      <img src="Gen AI.jpg" alt="Gen AI Study Jams Certificate" />
      <div class="title-overlay">Gen AI Study Jams (Google Cloud)</div>
    </div>
  </div>
</section>

<!-- Projects -->
<section id="projects">
  <h2>💻 Projects</h2>
  <div class="projects-list">
    <div class="project-card">
      <h3 class="project-title">AI Document Analyzer</h3>
      <p class="project-desc">Built an intelligent web app using Python, Streamlit, and Gemini API to summarize, analyze sentiment, and extract document insights.</p>
     
    </div>
    <div class="project-card">
      <h3 class="project-title">Personal Portfolio</h3>
      <p class="project-desc">Developed a responsive portfolio showcasing my AI and web development skills using HTML, CSS, and JavaScript.</p>
      
    </div>
  </div>
</section>

<!-- Google Cloud -->
<section id="google-clouds">
  <h2>☁️ Google Cloud Achievements</h2>
  <div class="google-cloud-text">
    <p>Completed 15+ Google Cloud Skill Badges covering GenAI, Infrastructure, API Development, and Data Analytics. Gold League Member with 22,000+ points!</p>
    <p><strong>AI/ML Pro:</strong> Built GenAI apps with Gemini & Streamlit, mastered Vision & Speech APIs.</p>
    <p><strong>Cloud Ninja:</strong> Deployed scalable apps with Cloud Run, API Gateway, and Pub/Sub.</p>
  </div>
</section>

<!-- Contact -->
<section id="contact">
  <h2>📩 Contact</h2>
  <p>Let's connect! Reach out at <a href="mailto:gounderpriyanka4@gmail.com">gounderpriyanka4@gmail.com</a></p>
</section>

<footer>
  © 2025 Gounder Priyanka | Built with 💙 using HTML, CSS & JS
</footer>

<!-- Modal for full previews -->
<div class="modal" id="previewModal" aria-hidden="true">
  <div class="panel" id="modalPanel">
    <div style="display:flex;justify-content:space-between;align-items:center;padding:12px 16px;border-bottom:1px solid rgba(0,0,0,0.06)">
      <strong id="modalTitle">Preview</strong>
      <button id="closePreview" style="background:none;border:none;font-size:20px;cursor:pointer">✕</button>
    </div>
    <div style="height:560px;background:#0b1220;display:flex;align-items:center;justify-content:center;">
      <canvas id="modalCanvas" style="width:100%;height:100%;display:block"></canvas>
    </div>
    <div style="padding:12px 16px;color:#666">Model preview. Close to return.</div>
  </div>
</div>

<!-- FontAwesome -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/js/all.min.js" crossorigin="anonymous"></script>

<script>
// === Dark/Light Mode ===
const toggleBtn = document.getElementById("themeToggle");
const body = document.body;

if (localStorage.getItem("theme") === "dark") {
  body.classList.add("dark");
  toggleBtn.textContent = "🌞";
}
toggleBtn.addEventListener("click", () => {
  body.classList.toggle("dark");
  const isDark = body.classList.contains("dark");
  toggleBtn.textContent = isDark ? "🌞" : "🌙";
  localStorage.setItem("theme", isDark ? "dark" : "light");
});

// ===== Floating Clouds and Bubbles =====
function createCloudsAndBubbles() {
  const bg = document.querySelector(".background") || (() => {
    const el = document.createElement('div');
    el.className = 'background';
    document.body.appendChild(el);
    return el;
  })();

  for (let i = 0; i < 6; i++) {
    const cloud = document.createElement("div");
    cloud.classList.add("cloud");
    cloud.style.left = Math.random() * 100 + "vw";
    cloud.style.animationDuration = 40 + Math.random() * 60 + "s";
    bg.appendChild(cloud);
  }
  for (let i = 0; i < 10; i++) {
    const bubble = document.createElement("div");
    bubble.classList.add("bubble");
    bubble.style.left = Math.random() * 100 + "vw";
    bubble.style.width = bubble.style.height = 20 + Math.random() * 80 + "px";
    bubble.style.animationDuration = 30 + Math.random() * 50 + "s";
    bg.appendChild(bubble);
  }
}
createCloudsAndBubbles();

// === Hero Scroll Animation ===
let renderer, scene, camera, clock, mixer, heroModel;
const heroCanvas = document.getElementById('heroCanvas');

function initHero() {
  renderer = new THREE.WebGLRenderer({ canvas: heroCanvas, antialias: true, alpha: true });
  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
  scene = new THREE.Scene();
  clock = new THREE.Clock();

  const w = heroCanvas.clientWidth || 1200;
  const h = heroCanvas.clientHeight || 420;

  camera = new THREE.PerspectiveCamera(45, w / h, 0.1, 100);
  camera.position.set(0, 1.6, 3.8);

  const hemi = new THREE.HemisphereLight(0xffffff, 0x444444, 0.6);
  scene.add(hemi);
  const dir = new THREE.DirectionalLight(0xffffff, 0.9);
  dir.position.set(5, 10, 2);
  scene.add(dir);

  const ground = new THREE.Mesh(
    new THREE.PlaneGeometry(40, 40),
    new THREE.MeshStandardMaterial({ color: 0x031028, roughness: 1 })
  );
  ground.rotation.x = -Math.PI / 2;
  ground.position.y = -1.7;
  scene.add(ground);

  const loader = new THREE.GLTFLoader();
  loader.load(HERO_MODEL_URL, (gltf) => {
    heroModel = gltf.scene;
    heroModel.position.set(0, -1.7, 0);
    scene.add(heroModel);

    if (gltf.animations.length) {
      mixer = new THREE.AnimationMixer(heroModel);
      const action = mixer.clipAction(THREE.AnimationClip.findByName(gltf.animations, WALK_ANIMATION_NAME) || gltf.animations[0]);
      action.play();
      action.paused = true;
      heroModel.userData = { walkDuration: action.getClip().duration, walkAction: action };
    }
  });

  const controls = new THREE.OrbitControls(camera, renderer.domElement);
  controls.enablePan = false;
  controls.enableZoom = false;
  controls.enableDamping = true;
  controls.minPolarAngle = Math.PI / 4;
  controls.maxPolarAngle = Math.PI / 2.4;

  onHeroResize();
  animateHero();
}

function animateHero() {
  requestAnimationFrame(animateHero);
  if (mixer) mixer.update(clock.getDelta());
  renderer.setSize(heroCanvas.clientWidth, heroCanvas.clientHeight, false);
  renderer.render(scene, camera);
}

function onHeroResize() {
  const w = heroCanvas.clientWidth || 1200;
  const h = heroCanvas.clientHeight || 420;
  camera.aspect = w / h;
  camera.updateProjectionMatrix();
  renderer.setSize(w, h, false);
}
window.addEventListener('resize', onHeroResize);

function updateByScroll() {
  const docH = document.body.scrollHeight - window.innerHeight;
  const scroll = docH > 0 ? window.scrollY / docH : 0;
  const percent = Math.min(1, Math.max(0, scroll));

  if (heroModel?.userData?.walkAction) {
    const action = heroModel.userData.walkAction;
    const dur = heroModel.userData.walkDuration;
    action.time = dur * percent;
    action.getMixer().setTime(action.time);
  }

  const start = new THREE.Vector3(0, 1.6, 3.8);
  const end = new THREE.Vector3(0, 1.1, 1.8);
  const camPos = new THREE.Vector3().lerpVectors(start, end, percent);
  camera.position.lerp(camPos, 0.12);
  camera.lookAt(0, 0.4, 0);
}

initMiniPreviews();
updateByScroll();

// Fix unwanted auto-scroll on first load
window.addEventListener("load", () => {
  history.replaceState(null, null, " ");
  setTimeout(() => {
    window.scrollTo(0, 0);
    updateByScroll();
  }, 50);
});

/* ==========================
   Mini Project Previews
========================== */


</script>
</body>
</html>
